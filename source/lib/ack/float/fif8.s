.sect .text; .sect .rom; .sect .data; .sect .bss
.extern .fif8
.sect .text
.fif8:
push ebp
mov ebp,esp
sub	esp,24
push esi
mov esi,8(ebp)
push 8
lea eax,-12(ebp)
push eax
lea eax,20(ebp)
push eax
call .extend
add esp,12
push 8
lea eax,-24(ebp)
push eax
lea eax,12(ebp)
push eax
call .extend
add esp,12
lea eax,-24(ebp)
push eax
lea eax,-12(ebp)
push eax
call .mul_ext
pop ecx
pop ecx
lea eax,-12(ebp)
push eax
lea eax,-24(ebp)
push eax
mov ecx,3
call .blm
push 8
lea eax,20(ebp)
push eax
lea eax,-24(ebp)
push eax
call .compact
add esp,12
movsx eax,-10(ebp)
test eax,eax
jns I1_4
mov (esi),0
mov 4(esi),0
lea eax,20(ebp)
push eax
lea eax,8(esi)
push eax
mov ecx,2
call .blm
jmp I1_1
I1_4:
movsx eax,-10(ebp)
cmp eax,51
jle I1_7
lea eax,20(ebp)
push eax
push esi
mov ecx,2
call .blm
mov 8(esi),0
mov 12(esi),0
jmp I1_1
I1_7:
movsx eax,-10(ebp)
sub eax,63
neg eax
push eax
lea eax,-8(ebp)
push eax
call .b64_sft
pop ecx
pop ecx
movsx eax,-10(ebp)
sub eax,63
push eax
lea eax,-8(ebp)
push eax
call .b64_sft
pop ecx
pop ecx
push 8
push esi
lea eax,-12(ebp)
push eax
call .compact
add esp,12
push 8
lea eax,-24(ebp)
push eax
push esi
call .extend
add esp,12
push 8
lea eax,-12(ebp)
push eax
lea eax,20(ebp)
push eax
call .extend
add esp,12
lea eax,-24(ebp)
push eax
lea eax,-12(ebp)
push eax
call .sub_ext
pop ecx
pop ecx
push 8
lea eax,8(esi)
push eax
lea eax,-12(ebp)
push eax
call .compact
add esp,12
I1_1:
pop esi
leave
ret
